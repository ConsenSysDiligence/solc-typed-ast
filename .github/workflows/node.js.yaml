name: NodeJS CI

on:
    push:
        branches: ["master"]
    pull_request:
        branches: ["master"]

jobs:
    build:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                # See https://nodejs.org/en/about/releases/
                node-version: [16.x]
                os: [ubuntu-latest, windows-latest]

        env:
            SOL_AST_COMPILER_CACHE: ${{ github.workspace }}/.compiler_cache
            NODE_OPTIONS: "--max-old-space-size=2048"

        steps:
            - name: Prepare Windows environemnt
              if: runner.os == 'Windows'
              run: |
                  git config --global core.autocrlf false
                  git config --global core.eol lf

            - uses: actions/checkout@v3

            - name: Use NodeJS ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"

            # See https://github.com/ethereum/solc-bin
            # See https://binaries.soliditylang.org/
            # Remove list files and one rarely used compiler to still test downloading on-demand

            - name: Pre-download compilers from historical builds archive
              if: runner.os == 'Linux'
              run: |
                  ./docker/download.sh 'linux-amd64' $SOL_AST_COMPILER_CACHE
                  rm -v $SOL_AST_COMPILER_CACHE/linux-amd64/list.json
                  rm -v $SOL_AST_COMPILER_CACHE/linux-amd64/solc-linux-amd64-v0.5.17+commit.d19bba13

                  ./docker/download.sh 'wasm' $SOL_AST_COMPILER_CACHE
                  rm -v $SOL_AST_COMPILER_CACHE/wasm/list.json
                  rm -v $SOL_AST_COMPILER_CACHE/wasm/soljson-v0.5.17+commit.d19bba13.js

            - name: Install, lint, test and generate coverage report
              run: |
                  npm install
                  npm link
                  sol-ast-compile --version
                  sol-ast-compile --locate-compiler-cache
                  npm run lint
                  npm test
                  npm run coverage

            - name: Upload coverage to CodeCov
              if: runner.os == 'Linux'
              uses: codecov/codecov-action@v3
              with:
                  name: codecov-umbrella
                  directory: ./coverage/
                  fail_ci_if_error: true
                  verbose: true
